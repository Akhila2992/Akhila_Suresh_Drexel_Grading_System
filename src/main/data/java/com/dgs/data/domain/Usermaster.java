package com.dgs.data.domain;


// Generated Dec 6, 2015 3:57:28 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Usermaster generated by hbm2java
 */
@Entity
@Table(name = "usermaster", catalog = "dgs")
public class Usermaster implements java.io.Serializable {

	private String userId;
	private String password;
	private String firstName;
	private String middleName;
	private String lastName;
	private Date dateOfBirth;
	private Date dateOfJoining;
	private Long mobile;
	private String gender;
	private String emailId;
	private String role;
	private Set professorcoursemappings = new HashSet(0);
	private Set studentmappings = new HashSet(0);

	public Usermaster() {
	}

	public Usermaster(String userId, String password) {
		this.userId = userId;
		this.password = password;
	}

	public Usermaster(String userId, String password, String firstName,
			String middleName, String lastName, Date dateOfBirth,
			Date dateOfJoining, Long mobile, String gender, String emailId,
			String role, Set professorcoursemappings, Set studentmappings) {
		this.userId = userId;
		this.password = password;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
		this.dateOfJoining = dateOfJoining;
		this.mobile = mobile;
		this.gender = gender;
		this.emailId = emailId;
		this.role = role;
		this.professorcoursemappings = professorcoursemappings;
		this.studentmappings = studentmappings;
	}

	@Id
	@Column(name = "userId", unique = true, nullable = false, length = 100)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "password", nullable = false, length = 30)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "firstName", length = 100)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "middleName", length = 100)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "lastName", length = 100)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateOfBirth", length = 0)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateOfJoining", length = 0)
	public Date getDateOfJoining() {
		return this.dateOfJoining;
	}

	public void setDateOfJoining(Date dateOfJoining) {
		this.dateOfJoining = dateOfJoining;
	}

	@Column(name = "mobile", precision = 10, scale = 0)
	public Long getMobile() {
		return this.mobile;
	}

	public void setMobile(Long mobile) {
		this.mobile = mobile;
	}

	@Column(name = "gender", length = 10)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "emailId", length = 100)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "role", length = 50)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usermaster")
	public Set getProfessorcoursemappings() {
		return this.professorcoursemappings;
	}

	public void setProfessorcoursemappings(Set professorcoursemappings) {
		this.professorcoursemappings = professorcoursemappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usermaster")
	public Set getStudentmappings() {
		return this.studentmappings;
	}

	public void setStudentmappings(Set studentmappings) {
		this.studentmappings = studentmappings;
	}

}
